# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  test_aws:
    runs-on: imank-personal-mac
    steps:
      - name: test AWS version
        run: |
          aws configure list
  create_aws_cloudformation:
    runs-on: imank-personal-mac
    steps:
      - name: create_vpc_simple
        run: >
          aws cloudformation create-stack 
          --stack-name vpc-dev-exchange
          --template-body file:///$(pwd)/vpc_single_zone.yaml 
          --parameters ParameterKey=EnvironmentName,ParameterValue=dev 
          ParameterKey=ApplicationtName,ParameterValue=exchange
          ParameterKey=VpcCIDR,ParameterValue="10.0.0.0/22" 
          ParameterKey=PublicSubnet1CIDR,ParameterValue="10.0.2.0/24" 
          ParameterKey=PrivateSubnet1CIDR,ParameterValue="10.0.0.0/23" 
      # - name: create_vpn
      #   run: >
      #     aws cloudformation update-stack 
      #     --stack-name vpn-dev-exchange
      #     --template-body file:///$(pwd)/vpn.yaml 
  # create_aws_kms:
  #   runs-on: imank-personal-mac
  #   steps:
  #     - name: create_kms
  #       run: >
  #         aws cloudformation create-stack 
  #         --stack-name vpc-dev-kms
  #         --template-body file:///$(pwd)/kms.yaml 
  create_iam:
    runs-on: imank-personal-mac
    steps:
      - name: create-iam-groups
        run: >
          aws cloudformation update-stack 
          --stack-name iam-groups
          --template-body file:///$(pwd)/iam_groups.yaml 
          --capabilities CAPABILITY_NAMED_IAM 

  ssh-public-key:
    runs-on: imank-personal-mac
    steps:
      - name: ssh-public-key
        run: >
          aws cloudformation create-stack 
          --stack-name ssh-public-key
          --template-body file:///$(pwd)/ssh-public-key.yaml 
          --parameters ParameterKey=KeyName,ParameterValue=ik 
          --parameters ParameterKey=PublicKeyMaterial,ParameterValue=ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAoeoVycrIC60QoiHk9Sy59Z6iI8HAM3i+CZoPlUy5xucTq2DaJ6AuPV9rIiC9QV4xdPmBm/UnNTjWhdRl1Cg382y/ar5rLr3cc76Rzkj+rxLWick1CP1oFvmhaaEaxZEAtnO3HHcKGTWYc6+VBg1c8CUl3p4hCuRz8XYZI/Jzu0oYfp0jymoW9zbYvxjsxUceuHcx7m4gFEu9S5iZotRMc0eUwk9sOOw+pwr5o/Ynkcgo4XvdFzOwHcbSAFxRsbSC+4zlzFJYwVukFpQbrz27B8xWic0y4YsenCiFh+qkRmwRQI2Kfx34bhFYtG4kiZgXZcsBJ8eTrSyETd16SHcknw== 
          --parameters ParameterKey=FullName,ParameterValue="Iman Kurniawan"

    

